{"version":3,"sources":["components/common/FormsControl/FormsControl.module.sass","utils/validators/validators.js","components/common/FormsControl/FormsControl.js","components/Profile/ProfileInfo/ProfileInfo.module.sass","components/Profile/MyPosts/MyPosts.module.sass","components/Profile/MyPosts/Post/Post.module.sass","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Element","input","meta","props","hasError","touched","error","className","classNames","styles","formControl","setClasses","errorMsg","Textarea","Input","createField","component","type","placeholder","name","validate","innerText","Post","info","item","key","id","src","alt","message","likes","MyPosts","React","memo","postComponents","posts","map","e","textarea","createRef","myPosts","AddMessageFormRedux","ref","onSubmit","newPostBody","addPost","current","reduxForm","form","sendBar","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","text","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusContainer","statusEdit","onBlur","updateStatus","autoFocus","onChange","currentTarget","onDoubleClick","ProfileInfo","profile","Preloader","color","lookingForAJobDescription","lookingForAJobDescriptionStatus","desctiptionBlock","photos","small","fullName","Profile","ProfileContainer","userId","this","match","params","isAuthingInProgress","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/5.84d1b109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1Di2Y\",\"error\":\"FormsControl_error__fDZcL\",\"formSummaryError\":\"FormsControl_formSummaryError__km0ML\",\"errorMsg\":\"FormsControl_errorMsg__Pt-Lf\"};","export const required = value => {\r\n\r\n    if (!!value) {\r\n        return undefined\r\n    }\r\n    else {\r\n        return 'required'\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `max length is ${maxLength} symbols`\r\n    }\r\n    else {\r\n        return undefined\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styles from './FormsControl.module.sass'\r\nimport classNames from 'classnames' // https://github.com/JedWatson/classnames\r\nimport { Field } from 'redux-form'\r\n\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n    const setClasses = (hasError) => {\r\n        return classNames({\r\n            [styles.formControl]: true,\r\n            [styles.error]: hasError\r\n        })\r\n    };\r\n    const hasError = meta.touched && meta.error; //  meta.touched Если один раз зашёл в форму и вышел из неё, если есть ошибка. meta.error если есть ошибка формы.\r\n    return (\r\n      <div className={ setClasses(hasError) }>\r\n        <Element {...input} {...props} />\r\n        { hasError && <div className={styles.errorMsg}>{meta.error}</div> }\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport const Textarea = Element(\"textarea\");\r\n\r\nexport const Input =  Element(\"input\");\r\n\r\nexport const createField = (component,type,placeholder,name,validate,innerText) => <div><Field component={component} type={type} placeholder={placeholder} name={name} validate={validate} />{innerText}</div>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverDiv\":\"ProfileInfo_coverDiv__1z4YC\",\"desctiptionBlock\":\"ProfileInfo_desctiptionBlock__24OvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Utv7\",\"sendBar\":\"MyPosts_sendBar__3M0sS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item___M8oJ\"};","import React from 'react';\nimport styles from './Post.module.sass'\n\nconst Post = (props) => {\n  \n  let info = ''\n  if (props.name)\n      info = props.name\n  return (\n    <div className={styles.item} key={props.id}>\n      <img src=\"https://shapka-youtube.ru/wp-content/uploads/2020/02/skull.jpg\" alt=\"1\"/>\n      {props.message}\n      <div>\n        {info}\n      </div>\n      <div>\n        <span>like {props.likes}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n","import React from 'react'\nimport styles from './MyPosts.module.sass'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormsControl/FormsControl'\n\nconst maxLength = maxLengthCreator(50)\n\nconst MyPosts = React.memo((props) => {\n  const postComponents = props.posts ?\n    props.posts.map(e => {\n      const { message, likes, id } = e\n      return <Post message={message} likes={likes} key={id} />\n    })\n    : []\n\n  let textarea = React.createRef()\n\n  const onSubmit = (value) => {\n    \n    const {newPostBody} = value\n    props.addPost(newPostBody)\n    textarea.current.value = ''\n\n  }\n\n  return (\n    <div className={styles.myPosts}>\n      <h4>My Posts</h4>\n\n      <AddMessageFormRedux ref={textarea} onSubmit={onSubmit}/>\n      <div className={styles.posts}>\n        {postComponents}\n      </div>\n    </div>\n  )\n})\n\n\nconst AddMessageForm = (props) => {\n\n \n  return <form className={styles.sendBar} onSubmit={props.handleSubmit}>\n    <Field component={Textarea} name={'newPostBody'} placeholder={'Enter your message'}  validate={[required, maxLength]}  />\n    <button>Send</button>\n  </form>\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMesageForm'})(AddMessageForm)\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/reducer_profile'\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (text) => {dispatch(addPostActionCreator(text))}\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileInfo.module.sass'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        \r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.statusContainer}  >\r\n            {editMode ?\r\n                <div className={styles.statusEdit}>\r\n                    <input onBlur={deactivateMode}\r\n                        autoFocus={true}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n                :\r\n                <div onDoubleClick={activateMode}>\r\n                    {props.status && props.status.length ? props.status : 'Напишите статус'}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.sass'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader color={'blue'} />\r\n    }\r\n\r\n\r\n    let lookingForAJobDescription = profile.lookingForAJobDescription\r\n    let lookingForAJobDescriptionStatus = 'Looking for a job: '\r\n    if (lookingForAJobDescription) {\r\n        lookingForAJobDescription = `${profile.lookingForAJobDescription}`\r\n    } else {\r\n        lookingForAJobDescription = ''\r\n        lookingForAJobDescriptionStatus = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className={styles.coverDiv}>\r\n            </div> */}\r\n            <div className={styles.desctiptionBlock}>\r\n                <img src={profile.photos && profile.photos.small} alt='' />\r\n                <h3>\r\n                    {profile.fullName}\r\n                </h3>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n\r\n                <div>\r\n                    <b>{lookingForAJobDescriptionStatus}</b>\r\n                    {lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux'\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/reducer_profile'\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/Preloader';\n\n\nclass ProfileContainer extends React.Component {\n\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    if (!this.props.isAuthingInProgress && !userId) {\n      userId = this.props.authorizedUserId\n\n    }\n    \n    if (!userId) {\n      this.props.history.push('/login')\n    }\n    this.props.getUserProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n\n  render() {\n\n    if (this.props.authorizedUserId && this.props.isAuthingInProgress && !this.props.match.params.userId) {\n      return <Preloader color={'blue'} />\n    }\n\n    return (\n      <Profile {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  \n  return {\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n  isAuthingInProgress: state.auth.isAuthingInProgress,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n)(ProfileContainer);"],"sourceRoot":""}