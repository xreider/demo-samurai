{"version":3,"sources":["components/common/FormsControl/FormsControl.module.sass","utils/validators/validators.js","components/common/FormsControl/FormsControl.js","components/Dialogs/Dialogs.module.sass","components/Dialogs/Message/Message.module.sass","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Element","input","meta","props","hasError","touched","error","className","classNames","styles","formControl","setClasses","errorMsg","Textarea","Input","createField","component","type","placeholder","name","validate","innerText","Dialog","path","id","dialog","to","Message","message","AddMessageFormRedux","reduxForm","form","sendBar","onSubmit","handleSubmit","Field","Dialogs","dialogElements","dialogsPage","dialogs","map","item","key","messageElements","messages","dialogsItems","newMessageText","newMessageBody","addMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","Component","RedirectComponent","this","React","connect","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/4.e47d13e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1Di2Y\",\"error\":\"FormsControl_error__fDZcL\",\"formSummaryError\":\"FormsControl_formSummaryError__km0ML\",\"errorMsg\":\"FormsControl_errorMsg__Pt-Lf\"};","export const required = value => {\r\n\r\n    if (!!value) {\r\n        return undefined\r\n    }\r\n    else {\r\n        return 'required'\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `max length is ${maxLength} symbols`\r\n    }\r\n    else {\r\n        return undefined\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styles from './FormsControl.module.sass'\r\nimport classNames from 'classnames' // https://github.com/JedWatson/classnames\r\nimport { Field } from 'redux-form'\r\n\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n    const setClasses = (hasError) => {\r\n        return classNames({\r\n            [styles.formControl]: true,\r\n            [styles.error]: hasError\r\n        })\r\n    };\r\n    const hasError = meta.touched && meta.error; //  meta.touched Если один раз зашёл в форму и вышел из неё, если есть ошибка. meta.error если есть ошибка формы.\r\n    return (\r\n      <div className={ setClasses(hasError) }>\r\n        <Element {...input} {...props} />\r\n        { hasError && <div className={styles.errorMsg}>{meta.error}</div> }\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport const Textarea = Element(\"textarea\");\r\n\r\nexport const Input =  Element(\"input\");\r\n\r\nexport const createField = (component,type,placeholder,name,validate,innerText) => <div><Field component={component} type={type} placeholder={placeholder} name={name} validate={validate} />{innerText}</div>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1jN-P\",\"dialogsItems\":\"Dialogs_dialogsItems__3shVB\",\"messages\":\"Dialogs_messages__27PBX\",\"sendBar\":\"Dialogs_sendBar__25Bxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2mp2U\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Dialog.module.sass'\n\nconst Dialog = props => {\n  const path = '/messages/' + props.id\n\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default Dialog\n","import React from 'react'\nimport styles from './Message.module.sass'\n\nconst Message = props => {\n  return (\n    <div className={styles.message}>{props.message}</div>\n  )\n}\n\nexport default Message","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { Textarea } from '../common/FormsControl/FormsControl';\nimport Dialog from './Dialog/Dialog';\nimport styles from './Dialogs.module.sass'\nimport Message from './Message/Message';\n\nconst maxLength = maxLengthCreator(100)\n\nconst Dialogs = (props) => {\n\n  const dialogElements = props.dialogsPage.dialogs ? props.dialogsPage.dialogs.map((item) => {\n    const { id, name } = item;\n    return <Dialog name={name} id={id} key={id} />\n  }) : []\n\n  const messageElements = props.dialogsPage.messages ? props.dialogsPage.messages.map((item) => {\n    const { message, id } = item;\n    return <Message message={message} key={id} />\n  }) : []\n\n\n  const onSubmit = (value) => {\n    \n    const {newMessageBody: newMessageText} = value\n    props.addMessage(newMessageText)\n\n  }\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogsItems}>\n        {dialogElements}\n      </div>\n      <div className={styles.messages}>\n        {messageElements}\n\n        <AddMessageFormRedux onSubmit={onSubmit} />\n      </div>\n\n    </div>\n  )\n}\n\nconst AddMessageForm = (props) => {\n\n\n  return <form className={styles.sendBar} onSubmit={props.handleSubmit}>\n    <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'}  validate={[required, maxLength]} />\n    \n    <button>Send</button>\n  </form>\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMesageForm'})(AddMessageForm)\n\nexport default Dialogs;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import { connect } from 'react-redux';\nimport { sendMessageCreator } from '../../redux/reducer_dialogs'\nimport Dialogs from './Dialogs';\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    // updateNewMessageText: (text) => {dispatch(updateMessageCreator(text))},\n    addMessage: (newMessageText) => {dispatch(sendMessageCreator(newMessageText))}\n  }\n}\n\n\n\nexport default compose(\n  WithAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps),\n)(Dialogs);\n\n"],"sourceRoot":""}